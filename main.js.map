{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/authentication/guards/auth.guard.ts","webpack:///./src/app/authentication/login/login.component.css","webpack:///./src/app/authentication/login/login.component.html","webpack:///./src/app/authentication/login/login.component.ts","webpack:///./src/app/authentication/logout/logout.component.css","webpack:///./src/app/authentication/logout/logout.component.html","webpack:///./src/app/authentication/logout/logout.component.ts","webpack:///./src/app/authentication/models/login.model.ts","webpack:///./src/app/authentication/models/register.model.ts","webpack:///./src/app/authentication/register/register.component.css","webpack:///./src/app/authentication/register/register.component.html","webpack:///./src/app/authentication/register/register.component.ts","webpack:///./src/app/discover/discover.component.css","webpack:///./src/app/discover/discover.component.html","webpack:///./src/app/discover/discover.component.ts","webpack:///./src/app/edit-chirp/edit-chirp.component.css","webpack:///./src/app/edit-chirp/edit-chirp.component.html","webpack:///./src/app/edit-chirp/edit-chirp.component.ts","webpack:///./src/app/foreign-feed/foreign-feed.component.css","webpack:///./src/app/foreign-feed/foreign-feed.component.html","webpack:///./src/app/foreign-feed/foreign-feed.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/models/edit-chirp.model.ts","webpack:///./src/app/models/submit-chirp.model.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/chirp.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/user-feed/user-feed.component.css","webpack:///./src/app/user-feed/user-feed.component.html","webpack:///./src/app/user-feed/user-feed.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div id=\\\"main\\\">\\n  <header>\\n    <span>Chirper</span>\\n  </header>\\n\\n  <app-navigation></app-navigation>\\n\\n  <router-outlet></router-outlet>\\n\\n  <footer>\\n    <p>Chirper SPA © 2018</p>\\n  </footer>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './authentication/login/login.component';\nimport { RegisterComponent } from './authentication/register/register.component';\nimport { AppRoutingModule } from './app.routing';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthService } from './services/auth.service';\nimport { ChirpService } from './services/chirp.service';\nimport { UserService } from './services/user.service';\nimport { LogoutComponent } from './authentication/logout/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { DiscoverComponent } from './discover/discover.component';\nimport { UserFeedComponent } from './user-feed/user-feed.component';\nimport { EditChirpComponent } from './edit-chirp/edit-chirp.component';\nimport { ForeignFeedComponent } from './foreign-feed/foreign-feed.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    NavigationComponent,\n    NotFoundComponent,\n    LogoutComponent,\n    HomeComponent,\n    DiscoverComponent,\n    UserFeedComponent,\n    EditChirpComponent,\n    ForeignFeedComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n  ],\n  providers: [AuthService, ChirpService, UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { RegisterComponent } from \"./authentication/register/register.component\";\r\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\r\nimport { LogoutComponent } from \"./authentication/logout/logout.component\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { AuthGuard } from \"./authentication/guards/auth.guard\";\r\nimport { DiscoverComponent } from \"./discover/discover.component\";\r\nimport { UserFeedComponent } from \"./user-feed/user-feed.component\";\r\nimport { EditChirpComponent } from \"./edit-chirp/edit-chirp.component\";\r\nimport { ForeignFeedComponent } from \"./foreign-feed/foreign-feed.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'logout', component: LogoutComponent },\r\n    \r\n    { path: 'feed', component: HomeComponent, canActivate: [AuthGuard] },\r\n    { path: 'discover', component: DiscoverComponent, canActivate: [AuthGuard] },\r\n    { path: 'profile', component: UserFeedComponent, canActivate: [AuthGuard] },\r\n    \r\n    { path: 'feed/:username', component: ForeignFeedComponent, canActivate: [AuthGuard] },\r\n    \r\n    { path: 'editChirp/:id', component: EditChirpComponent, canActivate: [AuthGuard] },\r\n    \r\n    { path: '**', component: NotFoundComponent }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n\n    if (this.authService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/login']);\n    return false;\n  }\n}","module.exports = \"\"","module.exports = \"<!-- {{model | json}} -->\\n<form id=\\\"formLogin\\\" class=\\\"form chirps\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n  <label>Username</label>\\n  <input name=\\\"username\\\" type=\\\"text\\\" required [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\">\\n  <label>Password</label>\\n  <input name=\\\"password\\\" type=\\\"password\\\" required [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\">\\n  <input id=\\\"btnLogin\\\" value=\\\"Sign In\\\" type=\\\"submit\\\">\\n  <a routerLink=\\\"/register\\\">Register</a>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginModel } from '../models/login.model';\nimport { Router } from \"@angular/router\"\nimport { AuthService } from '../../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: LoginModel\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {\n    this.model = new LoginModel('', '')\n  }\n\n  ngOnInit() {\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/feed'])\n    }\n  }\n\n  login() {\n    this.authService.login(this.model)\n      .subscribe(data => {\n        this.authService.saveSession(data)\n\n        this.toastr.success('Login successful.')\n\n        this.router.navigate(['/feed'])\n      },\n        err => {\n          this.toastr.error(err['error']['description'], 'Warning!')\n        })\n  }\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.authService.logout()\n      .subscribe(data => {\n        this.toastr.success('Logout successful.')\n        sessionStorage.clear()\n        this.authService.authtoken = \"\"\n        this.router.navigate(['/login'])\n      })\n  }\n}\n","export class LoginModel {\r\n    constructor(\r\n        public username: string,\r\n        public password: string\r\n    ) { }\r\n}","export class RegisterModel {\r\n    constructor(\r\n        public username: string,\r\n        public password: string,\r\n        public repeatPass: string,\r\n        public subscriptions: string[] = []\r\n    ) { }\r\n}","module.exports = \"\"","module.exports = \"<!-- {{model | json}} -->\\n<form class=\\\"form chirps\\\" id=\\\"formRegister\\\" #registrationForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n\\n  <label for=\\\"username\\\">Username</label>\\n  <input name=\\\"username\\\" type=\\\"text\\\" required [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\">\\n  <label>Password</label>\\n  <input name=\\\"password\\\" type=\\\"password\\\" required [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\">\\n  <label>Repeat Password</label>\\n  <input name=\\\"repeatPass\\\" type=\\\"password\\\" required [(ngModel)]=\\\"model.repeatPass\\\" #repeatPass=\\\"ngModel\\\">\\n\\n  <input id=\\\"btnRegister\\\" value=\\\"Register\\\" type=\\\"submit\\\" [disabled]=\\\"registrationForm.form.invalid\\\">\\n  <a routerLink=\\\"/login\\\">Log in</a>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { RegisterModel } from '../models/register.model';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  model: RegisterModel\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {\n    this.model = new RegisterModel('', '', '')\n  }\n\n  ngOnInit() {\n  }\n\n  register() {\n    delete this.model['repeatPass']\n\n    this.authService\n      .register(this.model)\n      .subscribe(data => {\n        this.authService.saveSession(data)\n\n        this.toastr.success('Registration successful. You are now logged in!')\n\n        this.router.navigate(['/feed'])\n      },\n        err => {\n          this.toastr.error(err['error']['description'], 'Warning!')\n        })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"chirps\\\">\\n    <h2 class=\\\"titlebar\\\">Discover</h2>\\n    <div id=\\\"userlist\\\">\\n      <div class=\\\"userbox\\\" *ngFor=\\\"let u of users\\\">\\n        <div>\\n          <a routerLink=\\\"../feed/{{u.username}}\\\" class=\\\"chirp-author\\\">{{u.username}}</a>\\n        </div>\\n\\n        <div class=\\\"user-details\\\">\\n          <a class=\\\"pseudolink\\\" (click)=\\\"deleteUser(u._id)\\\" *ngIf=\\\"authService.isAdmin()\\\">delete user </a>\\n          <span>{{u.followers}} followers</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { AuthService } from '../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.component.html',\n  styleUrls: ['./discover.component.css']\n})\nexport class DiscoverComponent implements OnInit {\n  users\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.userService.loadAllUsers()\n      .subscribe((users) => {\n        users.forEach(user => {\n          user.followers = users.filter(u => u.subscriptions.includes(user.username)).length\n        })\n\n        users = users.filter(u => u.username !== sessionStorage.getItem('username'))\n\n        users = users.sort((a, b) => b.followers - a.followers) // sort by descending followers\n\n        this.users = users\n      })\n  }\n\n  deleteUser(id: string) {\n    this.userService.deleteUser(id)\n      .subscribe(() => {\n        this.toastr.info(\"User deleted.\")\n        //this.loadData()\n      })\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"chirper\\\">\\n    <h2 class=\\\"titlebar\\\">{{bindingModel.author}}</h2>\\n    <form id=\\\"formSubmitChirp\\\" class=\\\"chirp-form\\\" #formEditChirp=\\\"ngForm\\\" (ngSubmit)=\\\"editChirp()\\\">\\n      <textarea name=\\\"text\\\" class=\\\"chirp-input\\\" required minlength=\\\"5\\\" maxlength=\\\"150\\\" [(ngModel)]=\\\"bindingModel.text\\\" #text=\\\"ngModel\\\"\\n        value=\\\"{{bindingModel.text}}\\\"></textarea>\\n      <input class=\\\"chirp-submit\\\" id=\\\"btnSubmitChirp\\\" [disabled]=\\\"formEditChirp.form.invalid\\\" value=\\\"Edit\\\" type=\\\"submit\\\">\\n    </form>\\n\\n    <div style=\\\"color:red\\\" *ngIf=\\\"bindingModel.text?.length == 150\\\">\\n      Chirp text cannot be longer than 150 characters!\\n    </div>\\n\\n    <div style=\\\"color:red\\\" *ngIf=\\\"bindingModel.text?.length < 5\\\">\\n      Chirp text must be at least 5 symbols long!\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChirpService } from '../services/chirp.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EditChirpModel } from '../models/edit-chirp.model';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-chirp',\n  templateUrl: './edit-chirp.component.html',\n  styleUrls: ['./edit-chirp.component.css']\n})\nexport class EditChirpComponent implements OnInit {\n  bindingModel: EditChirpModel\n\n  constructor(\n    private chirpService: ChirpService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService) {\n    this.bindingModel = new EditChirpModel('', '', '')\n  }\n\n  ngOnInit() {\n    let chirpId = this.route.snapshot.params['id']\n\n    this.chirpService.loadChirpById(chirpId)\n      .subscribe(data => {\n        this.bindingModel = data[0]\n      })\n  }\n\n  editChirp() {\n    this.chirpService.editChirp(this.bindingModel._id, this.bindingModel.author, this.bindingModel.text)\n      .subscribe(() => {\n        this.toastr.info(\"Chirp edited\")\n      })\n  }\n}\n","module.exports = \".pseudo {\\r\\n  cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"chirper\\\">\\n\\n    <h2 class=\\\"titlebar\\\">{{username}}</h2>\\n\\n    <a id=\\\"btnFollow\\\" class=\\\"chirp-author\\\" *ngIf=\\\"!isFollowed\\\" (click)=\\\"followUser()\\\">Follow</a>\\n    <a id=\\\"btnFollow\\\" class=\\\"chirp-author\\\" *ngIf=\\\"isFollowed\\\" (click)=\\\"unfollowUser()\\\">Unfollow</a>\\n\\n    <div id=\\\"userProfileStats\\\" class=\\\"user-details\\\">\\n      <span>{{chirpsCount}} chirps</span> |\\n      <span>{{following}} following</span> |\\n      <span>{{followers}} followers</span>\\n    </div>\\n  </div>\\n  <div id=\\\"profileChirps\\\" class=\\\"chirps\\\">\\n    <h2 class=\\\"titlebar\\\">{{username}}'s chirps</h2>\\n    <article class=\\\"chirp\\\" *ngFor=\\\"let c of chirps\\\">\\n      <div class=\\\"titlebar\\\">\\n        <a routerLink=\\\"../feed/{{username}}\\\" class=\\\"chirp-author\\\">{{username}}</a>\\n        <span class=\\\"chirp-time\\\">\\n          <a routerLink=\\\"/editChirp/{{c._id}}\\\" *ngIf=\\\"authService.isAdmin()\\\">edit </a>\\n          <a class=\\\"pseudolink\\\" (click)=\\\"deleteChirp(c._id)\\\" *ngIf=\\\"authService.isAdmin()\\\">delete </a> {{c.time}}\\n        </span>\\n      </div>\\n      <p>{{c.text}}</p>\\n    </article>\\n    <div class=\\\"chirp\\\" *ngIf=\\\"!chirps?.length\\\">\\n      <span class=\\\"loading\\\">No chirps in database</span>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChirpService } from '../services/chirp.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { forkJoin } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-foreign-feed',\n  templateUrl: './foreign-feed.component.html',\n  styleUrls: ['./foreign-feed.component.css']\n})\nexport class ForeignFeedComponent implements OnInit {\n  username: string\n  chirpsCount: number\n  following: number\n  followers: number\n  chirps\n  isFollowed: boolean = false\n\n  constructor(\n    private authService: AuthService,\n    private chirpService: ChirpService,\n    private userService: UserService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.username = this.route.snapshot.params['username']\n    this.isFollowed = JSON.parse(sessionStorage.getItem('subscriptions')).includes(this.username)\n\n    forkJoin(\n      [\n        this.chirpService.loadAllChirpsByUsername(this.username),\n        this.userService.loadUserFollowers(this.username),\n        this.userService.loadUserByUsername(this.username)\n      ]\n    ).subscribe(([chirpsArr, followersArr, user]) => {\n      this.chirpsCount = chirpsArr.length\n      this.following = user[0].subscriptions.length\n      this.followers = followersArr.length\n\n      chirpsArr.forEach(c => {\n        c.time = this.dateConvertor(c._kmd.ect)\n        c.isAuthor = c.author === sessionStorage.getItem('username')\n      })\n\n      this.chirps = chirpsArr\n    })\n  }\n\n  followUser() {\n    let userId = sessionStorage.getItem('userId')\n\n    // Create a copy of arr\n    let newSubArr = JSON.parse(sessionStorage.getItem('subscriptions')).splice(0)\n    newSubArr.push(this.username)\n\n    this.userService.modifyUser(userId, newSubArr)\n      .subscribe(() => {\n        this.toastr.info(`Subscribed to ${this.username}`)\n\n        sessionStorage.setItem('subscriptions', JSON.stringify(newSubArr))\n\n        this.isFollowed = JSON.parse(sessionStorage.getItem('subscriptions')).includes(this.username)\n      })\n  }\n\n  unfollowUser() {\n    let userId = sessionStorage.getItem('userId')\n    let newSubArr = JSON.parse(sessionStorage.getItem('subscriptions')).splice(0)\n    let indexOfEl = newSubArr.indexOf(this.username)\n    newSubArr.splice(indexOfEl, 1)\n\n    this.userService.modifyUser(userId, newSubArr)\n      .subscribe(() => {\n        this.toastr.info(`Unsubscribed to ${this.username}`)\n\n        sessionStorage.setItem('subscriptions', JSON.stringify(newSubArr))\n\n        this.isFollowed = JSON.parse(sessionStorage.getItem('subscriptions')).includes(this.username)\n      })\n  }\n\n  deleteChirp(id: string) {\n    this.chirpService.deleteChirp(id)\n      .subscribe(() => {\n        this.toastr.info(\"Chirp deleted.\")\n        //this.loadData()\n      })\n  }\n\n  dateConvertor(dateIsoFormat) {\n    // @ts-ignore\n    let diff = new Date() - (new Date(dateIsoFormat));\n    diff = Math.floor(diff / 60000);\n    if (diff < 1) return 'less than a minute';\n    if (diff < 60) return diff + ' minute' + pluralize(diff);\n    diff = Math.floor(diff / 60);\n    if (diff < 24) return diff + ' hour' + pluralize(diff);\n    diff = Math.floor(diff / 24);\n    if (diff < 30) return diff + ' day' + pluralize(diff);\n    diff = Math.floor(diff / 30);\n    if (diff < 12) return diff + ' month' + pluralize(diff);\n    diff = Math.floor(diff / 12);\n    return diff + ' year' + pluralize(diff);\n\n    function pluralize(value) {\n      if (value !== 1) return 's';\n      else return '';\n    }\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"content\\\">\\n  <div id=\\\"chirps\\\" class=\\\"chirps\\\">\\n    <h2 class=\\\"titlebar\\\">Chirps from all followed users</h2>\\n    <article class=\\\"chirp\\\" *ngFor=\\\"let c of chirps\\\">\\n      <div class=\\\"titlebar\\\">\\n        <a routerLink=\\\"{{c.author}}\\\" class=\\\"chirp-author\\\">{{c.author}}</a>\\n        <span class=\\\"chirp-time\\\">\\n          <a routerLink=\\\"/editChirp/{{c._id}}\\\" *ngIf=\\\"authService.isAdmin()\\\">edit </a>\\n          <a class=\\\"pseudolink\\\" (click)=\\\"deleteChirp(c._id)\\\" *ngIf=\\\"authService.isAdmin()\\\">delete </a> {{c.time}}\\n        </span>\\n      </div>\\n      <p>{{c.text}}</p>\\n    </article>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ChirpService } from '../services/chirp.service';\nimport { forkJoin } from 'rxjs';\nimport { UserService } from '../services/user.service';\nimport { SubmitChirpModel } from '../models/submit-chirp.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  model: SubmitChirpModel\n  username: string\n  chirpsCount: number\n  following: number\n  followers: number\n  chirps\n\n  constructor(\n    private authService: AuthService,\n    private chirpService: ChirpService,\n    private userService: UserService,\n    private toastr: ToastrService\n  ) {\n    this.model = new SubmitChirpModel('')\n    this.username = sessionStorage.getItem('username')\n  }\n\n  ngOnInit() {\n    let allFollowedChirps = []\n\n    let users = JSON.parse(sessionStorage.getItem('subscriptions'))\n\n    for (let user of users) {\n      allFollowedChirps.push(this.chirpService.loadAllChirpsByUsername(user))\n    }\n\n    forkJoin(allFollowedChirps)\n      .subscribe(arr => {\n        if (arr.length > 0) {\n          let allChirpsInOneArray = arr.reduce((result, current) => {\n            return result.concat(current)\n          })\n\n          allChirpsInOneArray.forEach(c => {\n            c.time = this.dateConvertor(c._kmd.ect)\n          })\n\n          this.chirps = allChirpsInOneArray\n        }\n      })\n\n    forkJoin(\n      [\n        this.chirpService.loadAllChirpsByUsername(this.username),\n        this.userService.loadUserFollowers(this.username)\n      ]\n    ).subscribe(([chirpsByUser, followersArr]) => {\n      this.chirpsCount = (<any>chirpsByUser).length\n      this.following = JSON.parse(sessionStorage.getItem('subscriptions')).length\n      this.followers = (<any>followersArr).length\n    }\n    )\n  }\n\n  submitChirp() {\n    this.chirpService.createChirp(this.model.text, this.username)\n      .subscribe(() => {\n        this.toastr.info(\"Chirp published.\")\n      })\n  }\n\n  dateConvertor(dateIsoFormat) {\n    // @ts-ignore\n    let diff = new Date() - (new Date(dateIsoFormat));\n    diff = Math.floor(diff / 60000);\n    if (diff < 1) return 'less than a minute';\n    if (diff < 60) return diff + ' minute' + pluralize(diff);\n    diff = Math.floor(diff / 60);\n    if (diff < 24) return diff + ' hour' + pluralize(diff);\n    diff = Math.floor(diff / 24);\n    if (diff < 30) return diff + ' day' + pluralize(diff);\n    diff = Math.floor(diff / 30);\n    if (diff < 12) return diff + ' month' + pluralize(diff);\n    diff = Math.floor(diff / 12);\n    return diff + ' year' + pluralize(diff);\n\n    function pluralize(value) {\n      if (value !== 1) return 's';\n      else return '';\n    }\n  }\n}\n","export class EditChirpModel {\r\n    constructor(\r\n        public _id: string,\r\n        public text: string,\r\n        public author: string\r\n    ) { }\r\n}","export class SubmitChirpModel {\r\n    constructor(\r\n        public text: string,\r\n    ) { }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"menu\\\" *ngIf=\\\"authService.isAuthenticated()\\\">\\n  <a routerLink=\\\"/feed\\\">Home</a>\\n  <a routerLink=\\\"/discover\\\">Discover</a>\\n  <a routerLink=\\\"/profile\\\">Me</a>\\n  <a routerLink=\\\"/logout\\\">Logout</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \".not-found {\\r\\n  margin: 20px auto;\\r\\n  padding: 20px;\\r\\n  text-align: center;\\r\\n  color: gray;\\r\\n}\\r\\n\\r\\np:nth-child(1) {\\r\\n  font-size: 100px;\\r\\n}\\r\\n\\r\\np:nth-child(2) {\\r\\n  font-size: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"not-found\\\">\\r\\n  <p>Error 404</p>\\r\\n  <p>Woops. Looks like this page does not exist!</p>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  // https://www.youtube.com/watch?v=tDb-FszoKXE\n}\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { LoginModel } from '../authentication/models/login.model';\r\nimport { RegisterModel } from '../authentication/models/register.model';\r\n\r\nconst ADMIN_ROLE_ID = '5275abc5-fdbb-455e-ac27-a4b3e53a8ce1'\r\n\r\nconst appKey = \"kid_S1MVEYqMQ\" // APP KEY HERE;\r\nconst appSecret = \"8546d0afc25c48a19153f0ae2c6374f7\" // APP SECRET HERE;\r\nconst registerUrl = `https://baas.kinvey.com/user/${appKey}`;\r\nconst loginUrl = `https://baas.kinvey.com/user/${appKey}/login`;\r\nconst logoutUrl = `https://baas.kinvey.com/user/${appKey}/_logout`;\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    private currentAuthtoken: string\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    login(model: LoginModel) {\r\n        return this.http.post(loginUrl,\r\n            JSON.stringify(model),\r\n            {\r\n                headers: this.createAuthHeaders('Basic')\r\n            })\r\n    }\r\n\r\n    register(model: RegisterModel) {\r\n        return this.http.post(registerUrl,\r\n            JSON.stringify(model),\r\n            {\r\n                headers: this.createAuthHeaders('Basic')\r\n            })\r\n    }\r\n\r\n    logout() {\r\n        return this.http.post(logoutUrl,\r\n            {},\r\n            {\r\n                headers: this.createAuthHeaders('Kinvey')\r\n            })\r\n    }\r\n\r\n    get authtoken() {\r\n        return this.currentAuthtoken;\r\n    }\r\n\r\n    set authtoken(value: string) {\r\n        this.currentAuthtoken = value\r\n    }\r\n\r\n    isAuthenticated() {\r\n        //return this.currentAuthtoken === sessionStorage.getItem('authtoken');\r\n        return sessionStorage.getItem('authtoken') !== null;\r\n    }\r\n\r\n    isAdmin() {\r\n        return sessionStorage.getItem('roleId') !== null;\r\n    }\r\n\r\n    saveSession(userInfo) {\r\n        let userAuth = userInfo._kmd.authtoken;\r\n        sessionStorage.setItem('authtoken', userAuth);\r\n        let username = userInfo.username;\r\n        sessionStorage.setItem('username', username);\r\n        sessionStorage.setItem('userId', userInfo._id);\r\n        sessionStorage.setItem('subscriptions', JSON.stringify(userInfo.subscriptions));\r\n\r\n        if (userInfo._kmd.roles) {\r\n            for (let userRole of userInfo._kmd.roles) {\r\n                if (userRole.roleId === ADMIN_ROLE_ID) {\r\n                    sessionStorage.setItem('roleId', ADMIN_ROLE_ID)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private createAuthHeaders(type: string) {\r\n        if (type === \"Basic\") {\r\n            return new HttpHeaders({\r\n                'Authorization': `Basic ${btoa(`${appKey}:${appSecret}`)}`,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        } else {\r\n            return new HttpHeaders({\r\n                'Authorization': `Kinvey ${sessionStorage.getItem('authtoken')}`,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core'\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\n\r\nconst appKey = \"kid_S1MVEYqMQ\"\r\nconst appSecret = \"8546d0afc25c48a19153f0ae2c6374f7\"\r\nconst masterSecret = \"ea1698304ab4454ea94217e7c7523d6e\"\r\nconst baseUrl = `https://baas.kinvey.com/appdata/${appKey}/`\r\n\r\n@Injectable()\r\nexport class ChirpService {\r\n\r\n    constructor(private http: HttpClient,\r\n        private authService: AuthService) {\r\n    }\r\n\r\n    loadFollowersChirps(subs) {\r\n        let endpoint = `chirps?query={\"author\":{\"$in\": [${subs}]}}&sort={\"_kmd.ect\": -1}`\r\n\r\n        return this.http.get<any>(baseUrl + endpoint, { headers: this.createAuthHeaders(\"Kinvey\") })\r\n    }\r\n\r\n    loadAllChirpsByUsername(username: string) {\r\n        let endpoint: string = `chirps?query={\"author\":\"${username}\"}&sort={\"_kmd.ect\": -1}`\r\n\r\n        return this.http.get<any>(baseUrl + endpoint, { headers: this.createAuthHeaders(\"Kinvey\") })\r\n    }\r\n\r\n    loadChirpById(chirpId) {\r\n        let endpoint = `chirps?query={\"_id\":\"${chirpId}\"}`\r\n\r\n        return this.http.get<any>(baseUrl + endpoint, { headers: this.createAuthHeaders(\"Kinvey\") })\r\n    }\r\n\r\n    loadAllChirps() {\r\n        let endpoint = `chirps?query={}&sort={\"_kmd.ect\": -1}`\r\n\r\n        return this.http.get(baseUrl + endpoint, { headers: this.createAuthHeaders(\"Master\") })\r\n    }\r\n\r\n    createChirp(text, author) {\r\n        let chirpData = {\r\n            text,\r\n            author\r\n        }\r\n\r\n        return this.http.post(baseUrl + 'chirps', JSON.stringify(chirpData), { headers: this.createAuthHeaders(\"Kinvey\") })\r\n    }\r\n\r\n    deleteChirp(chirpId) {\r\n        console.log(this.createAuthHeaders(\"Master\"))\r\n        return this.http.delete(baseUrl + `chirps/${chirpId}`,\r\n            { headers: this.createAuthHeaders(this.authService.isAdmin() ? \"Master\" : \"Kinvey\") }\r\n        )\r\n\r\n    }\r\n\r\n    editChirp(chirpId, author, text) {\r\n        let newData = {\r\n            author: author,\r\n            text: text\r\n        }\r\n\r\n        return this.http.put(baseUrl + `chirps/${chirpId}`, JSON.stringify(newData),\r\n            { headers: this.createAuthHeaders(this.authService.isAdmin() ? \"Master\" : \"Kinvey\") }\r\n        )\r\n    }\r\n\r\n    private createAuthHeaders(type: string) {\r\n        if (type === \"Basic\") {\r\n            return new HttpHeaders({\r\n                'Authorization': `Basic ${btoa(`${appKey}:${appSecret}`)}`,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        } else if (type === \"Kinvey\") {\r\n            return new HttpHeaders({\r\n                'Authorization': `Kinvey ${sessionStorage.getItem('authtoken')}`,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        } else if (type === \"Master\") {\r\n            return new HttpHeaders({\r\n                'Authorization': `Basic ${btoa(`${appKey}:${masterSecret}`)}`,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core'\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nconst appKey = \"kid_S1MVEYqMQ\"\r\nconst appSecret = \"8546d0afc25c48a19153f0ae2c6374f7\"\r\nconst masterSecret = \"ea1698304ab4454ea94217e7c7523d6e\"\r\nconst baseUrl = `https://baas.kinvey.com/user/${appKey}/`\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    loadUserByUsername(username: string) {\r\n        let endpoint = `?query={\"username\":\"${username}\"}`\r\n\r\n        return this.http.get(baseUrl + endpoint, { headers: this.createAuthHeaders(\"Kinvey\") })\r\n    }\r\n\r\n    loadUserFollowers(username: string) {\r\n        let endpoint = `?query={\"subscriptions\":\"${username}\"}`\r\n\r\n        return this.http.get<any>(baseUrl + endpoint, { headers: this.createAuthHeaders(\"Kinvey\") })\r\n    }\r\n\r\n    loadAllUsers() {\r\n        return this.http.get<any>(baseUrl, { headers: this.createAuthHeaders(\"Kinvey\") })\r\n    }\r\n\r\n    modifyUser(userId, newSubs) {\r\n        let newUser = {\r\n            subscriptions: newSubs\r\n        }\r\n\r\n        //return requester.update('user', userId, 'kinvey', newUser)\r\n        return this.http.put(baseUrl + userId, JSON.stringify(newUser), { headers: this.createAuthHeaders(\"Kinvey\") })\r\n    }\r\n\r\n    deleteUser(userId) {\r\n        return this.http.delete(baseUrl + `${userId}?hard=true`, { headers: this.createAuthHeaders(\"Master\") })\r\n    }\r\n\r\n    private createAuthHeaders(type: string) {\r\n        if (type === \"Basic\") {\r\n            return new HttpHeaders({\r\n                'Authorization': `Basic ${btoa(`${appKey}:${appSecret}`)}`,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        } else if (type === \"Kinvey\") {\r\n            return new HttpHeaders({\r\n                'Authorization': `Kinvey ${sessionStorage.getItem('authtoken')}`,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        } else if (type === \"Master\") {\r\n            return new HttpHeaders({\r\n                'Authorization': `Basic ${btoa(`${appKey}:${masterSecret}`)}`,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"chirper\\\">\\n\\n    <h2 class=\\\"titlebar\\\">{{username}}</h2>\\n\\n    <form id=\\\"formSubmitChirp\\\" class=\\\"chirp-form\\\" #formSubmitChirp=\\\"ngForm\\\" (ngSubmit)=\\\"submitChirp()\\\">\\n      <textarea name=\\\"text\\\" class=\\\"chirp-input\\\" required minlength=\\\"5\\\" maxlength=\\\"150\\\" [(ngModel)]=\\\"model.text\\\" #text=\\\"ngModel\\\"></textarea>\\n      <input class=\\\"chirp-submit\\\" id=\\\"btnSubmitChirp\\\" [disabled]=\\\"formSubmitChirp.form.invalid\\\" value=\\\"Publish\\\" type=\\\"submit\\\">\\n    </form>\\n\\n    <div style=\\\"color:red\\\" *ngIf=\\\"model.text?.length == 150\\\">\\n      Chirp text cannot be longer than 150 characters!\\n    </div>\\n\\n    <div style=\\\"color:red\\\" *ngIf=\\\"model.text?.length < 5\\\">\\n      Chirp text must be at least 5 symbols long!\\n    </div>\\n\\n    <div id=\\\"myStats\\\" class=\\\"user-details\\\">\\n      <span>{{chirpsCount}} chirps</span> |\\n      <span>{{following}} following</span> |\\n      <span>{{followers}} followers</span>\\n    </div>\\n  </div>\\n  <div id=\\\"chirps\\\" class=\\\"chirps\\\">\\n    <h2 class=\\\"titlebar\\\">My Chirps</h2>\\n    <article class=\\\"chirp\\\" *ngFor=\\\"let c of chirps\\\">\\n      <div class=\\\"titlebar\\\">\\n        <a routerLink=\\\"/feed/{{username}}\\\" class=\\\"chirp-author\\\">{{c.author}}</a>\\n        <span class=\\\"chirp-time\\\">\\n          <a routerLink=\\\"/editChirp/{{c._id}}\\\">edit </a>\\n          <a class=\\\"pseudolink\\\" (click)=\\\"deleteChirp(c._id)\\\">delete </a> {{c.time}}\\n        </span>\\n      </div>\\n      <p>{{c.text}}</p>\\n    </article>\\n    <div class=\\\"chirp\\\" *ngIf=\\\"!chirps?.length\\\">\\n      <span class=\\\"loading\\\">No chirps in database</span>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChirpService } from '../services/chirp.service';\nimport { UserService } from '../services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { forkJoin } from 'rxjs';\nimport { SubmitChirpModel } from '../models/submit-chirp.model';\n\n@Component({\n  selector: 'app-user-feed',\n  templateUrl: './user-feed.component.html',\n  styleUrls: ['./user-feed.component.css']\n})\nexport class UserFeedComponent implements OnInit {\n  model: SubmitChirpModel\n  username: string\n  chirpsCount: number\n  following: number\n  followers: number\n  chirps\n\n  constructor(\n    private chirpService: ChirpService,\n    private userService: UserService,\n    private toastr: ToastrService\n  ) {\n    this.model = new SubmitChirpModel('')\n    this.username = sessionStorage.getItem('username')\n  }\n\n  ngOnInit() {\n    this.loadData()\n  }\n\n  submitChirp() {\n    this.chirpService.createChirp(this.model.text, this.username)\n      .subscribe(() => {\n        this.toastr.info(\"Chirp published.\")\n      })\n  }\n\n  deleteChirp(id: string) {\n    this.chirpService.deleteChirp(id)\n      .subscribe(() => {\n        this.toastr.info(\"Chirp deleted.\")\n        //this.loadData()\n      })\n  }\n\n  loadData() {\n    forkJoin(\n      [\n        this.chirpService.loadAllChirpsByUsername(this.username),\n        this.userService.loadUserFollowers(this.username),\n        this.userService.loadUserByUsername(this.username)\n      ]).subscribe(([chirpsArr, followersArr, user]) => {\n        this.chirpsCount = chirpsArr.length\n        this.following = user[0].subscriptions.length\n        this.followers = followersArr.length\n\n        chirpsArr.forEach(c => {\n          c.time = this.dateConvertor(c._kmd.ect)\n          c.isAuthor = c.author === sessionStorage.getItem('username')\n        })\n\n        this.chirps = chirpsArr\n      })\n  }\n\n  dateConvertor(dateIsoFormat) {\n    // @ts-ignore\n    let diff = new Date() - (new Date(dateIsoFormat));\n    diff = Math.floor(diff / 60000);\n    if (diff < 1) return 'less than a minute';\n    if (diff < 60) return diff + ' minute' + pluralize(diff);\n    diff = Math.floor(diff / 60);\n    if (diff < 24) return diff + ' hour' + pluralize(diff);\n    diff = Math.floor(diff / 24);\n    if (diff < 30) return diff + ' day' + pluralize(diff);\n    diff = Math.floor(diff / 30);\n    if (diff < 12) return diff + ' month' + pluralize(diff);\n    diff = Math.floor(diff / 12);\n    return diff + ' year' + pluralize(diff);\n\n    function pluralize(value) {\n      if (value !== 1) return 's';\n      else return '';\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}